#                                                                    -*-perl-*-
$description = "Stem computation and substitution in pattern rules.";

$details = 'Test that make correctly computes stem and substitutes % for
computed stem in pattern rules with and without second expansion and with and
without last slash.';

my @files = ('workaround', 'bye.1', 'bye.2', 'bye.3', 'bye.4', 'bye1%2%', '3bye4%5',
             'bye7%8', 'bye10%', 'bye', '6bye', 'bye9', '11bye12', '13');
my $prereqs1 = join (' ', (@files));
my $prereqs2 = join (' lib/', (@files));

my @dir = ('', 'lib/'); # With and without last slash.
my @secondexpansion = ('', '.SECONDEXPANSION:');
my @rdir = ('', 'lib/');

for my $se (@secondexpansion) {
for my $d (@dir) {
for my $r (@rdir) {
(!$d && $r) && next;
my $dollar = $se ? '$' : '';

# One func, one %.
run_make_test("
$se
all: ${d}bye.x
${r}%.x: $dollar\$(firstword %.1); \$(info \$@)
.PHONY: $prereqs1 $prereqs2
", '', "${d}bye.x\n#MAKE#: Nothing to be done for 'all'.\n");

# Multiple funcs, each has one %.
run_make_test("
$se
all: ${d}bye.x
${d}%.x: $dollar\$(firstword %.1) $dollar\$(firstword %.2); \$(info \$@)
.PHONY: $prereqs1 $prereqs2
", '', "${d}bye.x\n#MAKE#: Nothing to be done for 'all'.\n");

# Multiple funcs, each has multiple %.
run_make_test("
$se
all: ${d}bye.x
${d}%.x: $dollar\$(wordlist 1, 99, %.1 %.2) $dollar\$(wordlist 1, 99, %.3 %.4); \$(info \$@)
.PHONY: $prereqs1 $prereqs2
", '', "${d}bye.x\n#MAKE#: Nothing to be done for 'all'.\n");

# Nested functions.
run_make_test("
$se
all: ${d}bye.x
${d}%.x: $dollar\$(wordlist 1, 99, $dollar\$(wordlist 1, 99, %.1 %.2)) $dollar\$(wordlist 1, 99, $dollar\$(wordlist 1,99, %.3 %.4)); \$(info \$@)
.PHONY: $prereqs1 $prereqs2
", '', "${d}bye.x\n#MAKE#: Nothing to be done for 'all'.\n");

# Multiple funcs, each has multiple words, each word has multiple %, sole %,
# various corner cases.
# Make should substitude the first % and only the first % in each word with the
# stem.
run_make_test("
$se
all: ${d}bye.x
${d}%.x: $dollar\$(wordlist 1, 99, %1%2% % 3%4%5 6%) %7%8 %9 $dollar\$(wordlist 1, 99, %10% 11%12) 13; \$(info \$@)
.PHONY: $prereqs1 $prereqs2
", '', "${d}bye.x\n#MAKE#: Nothing to be done for 'all'.\n");

if ($port_type eq 'UNIX') {
# Test that make does not use some hardcoded array of a finite size on stack.
# Long prerequisite name. This prerequisite name is over 66K long.
my $prefix = 'abcdefgh' x 128 x 33; # 33K long.
my $suffix = 'stuvwxyz' x 128 x 33; # 33K long.
run_make_test("
$se
all: ${d}bye.x
${d}%.x: $dollar\$(wordlist 1, 99, ${prefix}%${suffix}.1 ${prefix}%${suffix}.2); \$(info \$@)
.PHONY: ${prefix}bye${suffix}.1 ${prefix}bye${suffix}.2
", '', "${d}bye.x\n#MAKE#: Nothing to be done for 'all'.\n");
}

# Malformed makefile.
}
}
}

1;
